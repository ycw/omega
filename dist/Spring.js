import{Vector3 as t}from"three";function e(t,e,i,s){if("a"===i&&!s)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!s:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?s:"a"===i?s.call(t):s?s.value:e.get(t)}function i(t,e,i,s,o){if("m"===s)throw new TypeError("Private method is not writable");if("a"===s&&!o)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof e?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===s?o.call(t,i):o?o.value=i:e.set(t,i),i}var s,o,r,h;class a{constructor({from:e=new t,to:i=new t,frequency:h=10,decay:a=.5,maxAmplitude:n=1/0,position:c=new t}={}){s.add(this),o.set(this,void 0),r.set(this,void 0),this.from=e,this.to=i,this.frequency=h,this.decay=a,this.maxAmplitude=n,this.position=c,this.reset()}reset(){this.position.copy(this.from),i(this,o,!1,"f"),i(this,r,0,"f")}get isIdle(){return e(this,o,"f")}update(t){if(i(this,o,!1,"f"),i(this,r,e(this,r,"f")+t,"f"),0===this.frequency||0===this.decay)return e(this,s,"m",h).call(this);const a=this.frequency*e(this,r,"f"),n=this.decay**a,c=this.from.distanceTo(this.to)*n;if(c<.001)return e(this,s,"m",h).call(this);const f=Math.sin(2*Math.PI*a+e(this,r,"f")),d=Math.min(this.maxAmplitude,c)*f;this.position.copy(this.to).add(this.to.clone().sub(this.from).setLength(d))}}o=new WeakMap,r=new WeakMap,s=new WeakSet,h=function(){this.position.copy(this.to),i(this,o,!0,"f")};export{a as Spring};
//# sourceMappingURL=Spring.js.map
