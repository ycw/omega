{"version":3,"file":"KawaseBlur.js","sources":["../src/KawaseBlur/KawaseBlurShader.ts","../src/KawaseBlur/KawaseBlurPass.ts"],"sourcesContent":["export const KawaseBlurShader = {\r\n  uniforms: {\r\n    'tDiffuse': { value: null },\r\n    'uOffset': { value: null }\r\n  },\r\n  vertexShader: /* glsl */ `\r\n    varying vec2 vUv;\r\n    void main() {\r\n      vUv = uv;\r\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n  }`,\r\n  fragmentShader: /* glsl */ `\r\n    uniform sampler2D tDiffuse;\r\n    uniform vec2 uOffset;\r\n    varying vec2 vUv;\r\n    void main() {\r\n      gl_FragColor = .25 * (\r\n        texture2D( tDiffuse, vUv + uOffset )\r\n        + texture2D( tDiffuse, vUv - uOffset )\r\n        + texture2D( tDiffuse, vUv + uOffset * vec2( 1., -1. ) )\r\n        + texture2D( tDiffuse, vUv + uOffset * vec2( -1., 1. ) )\r\n      );\r\n    }\r\n  `\r\n};","import { UniformsUtils, ShaderMaterial, WebGLRenderer, WebGLRenderTarget, Vector2 } from 'three';\r\nimport { Pass, FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { KawaseBlurShader } from './KawaseBlurShader';\r\n\r\n\r\n\r\nclass InternalKawaseBlurPass extends Pass {\r\n\r\n  fsQuad: FullScreenQuad;\r\n  uniforms: ShaderMaterial['uniforms'];\r\n  shouldRenderToScreen: boolean;\r\n\r\n  constructor(uOffset: Vector2) {\r\n    super();\r\n\r\n    const uniforms = UniformsUtils.clone(KawaseBlurShader.uniforms);\r\n    uniforms.uOffset.value = uOffset;\r\n\r\n    const material = new ShaderMaterial({\r\n      uniforms,\r\n      vertexShader: KawaseBlurShader.vertexShader,\r\n      fragmentShader: KawaseBlurShader.fragmentShader,\r\n    });\r\n\r\n    this.fsQuad = new FullScreenQuad(material);\r\n    this.uniforms = material.uniforms;\r\n    this.shouldRenderToScreen = false;\r\n  }\r\n\r\n  render(\r\n    renderer: WebGLRenderer,\r\n    writeBuffer: WebGLRenderTarget,\r\n    readBuffer: WebGLRenderTarget\r\n  ) {\r\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\r\n\r\n    if (this.shouldRenderToScreen) {\r\n      renderer.setRenderTarget(null);\r\n    } else {\r\n      renderer.setRenderTarget(writeBuffer);\r\n      if (this.clear) renderer.clear();\r\n    }\r\n    this.fsQuad.render(renderer);\r\n  }\r\n}\r\n\r\n\r\n\r\nexport class KawaseBlurPass extends Pass {\r\n\r\n  #kernels: number[];\r\n  #renderer: WebGLRenderer;\r\n  #internalComposer: EffectComposer;\r\n\r\n  constructor({ renderer, kernels = [0, 1] }: { renderer: WebGLRenderer, kernels: number[] }) {\r\n    super();\r\n    this.#kernels = kernels;\r\n    this.#renderer = renderer;\r\n    this.#internalComposer = new EffectComposer(renderer, new WebGLRenderTarget(0, 0));\r\n    this.setKernels(kernels);\r\n  }\r\n\r\n  getKernels() {\r\n    return Array.from(this.#kernels);\r\n  }\r\n\r\n  setKernels(kernels: number[]) {\r\n    const res = this.#renderer.getDrawingBufferSize(new Vector2());\r\n\r\n    for (const [i, k] of kernels.entries()) {\r\n      const uOffset = new Vector2().setScalar(.5 + k).divide(res);\r\n      const pass = this.#internalComposer.passes[i] as InternalKawaseBlurPass;\r\n      if (pass) { // reuse\r\n        pass.uniforms.uOffset.value = uOffset;\r\n        pass.shouldRenderToScreen = false;\r\n      } else {\r\n        this.#internalComposer.addPass(new InternalKawaseBlurPass(uOffset));\r\n      }\r\n    }\r\n\r\n    this.#internalComposer.passes.length = kernels.length; // rm unused\r\n    this.#internalComposer.reset();\r\n    this.#kernels = Array.from(kernels);\r\n  }\r\n\r\n  render(\r\n    renderer: WebGLRenderer,\r\n    writeBuffer: WebGLRenderTarget,\r\n    readBuffer: WebGLRenderTarget\r\n  ) {\r\n    if (this.#kernels.length === 0) return;\r\n    // ---- transfer ownership\r\n    this.#internalComposer.readBuffer = readBuffer;\r\n    this.#internalComposer.writeBuffer = writeBuffer;\r\n    (this.#internalComposer.passes[this.#internalComposer.passes.length - 1] as InternalKawaseBlurPass).shouldRenderToScreen = this.renderToScreen;\r\n    this.#internalComposer.render();\r\n  }\r\n\r\n  setSize(w: number, h: number) {\r\n    this.#internalComposer.setSize(w, h);\r\n    this.setKernels(this.#kernels);\r\n  }\r\n\r\n};\r\n"],"names":["KawaseBlurShader","uniforms","tDiffuse","value","uOffset","vertexShader","fragmentShader","InternalKawaseBlurPass","Pass","fsQuad","shouldRenderToScreen","constructor","super","UniformsUtils","clone","material","ShaderMaterial","this","FullScreenQuad","render","renderer","writeBuffer","readBuffer","texture","setRenderTarget","clear","KawaseBlurPass","kernels","internalComposer","EffectComposer","WebGLRenderTarget","setKernels","getKernels","Array","from","res","getDrawingBufferSize","Vector2","i","k","entries","setScalar","divide","pass","passes","addPass","length","reset","renderToScreen","setSize","w","h"],"mappings":"8QAAaA,EAAmB,CAC9BC,SAAU,CACRC,SAAY,CAAEC,MAAO,MACrBC,QAAW,CAAED,MAAO,OAEtBE,aAAyB,oJAMzBC,eAA2B,+XCJ7B,MAAMC,UAA+BC,EAEnCC,OACAR,SACAS,qBAEAC,YAAYP,GACVQ,QAEA,MAAMX,EAAWY,EAAcC,MAAMd,EAAiBC,UACtDA,EAASG,QAAQD,MAAQC,EAEzB,MAAMW,EAAW,IAAIC,EAAe,CAClCf,SAAAA,EACAI,aAAcL,EAAiBK,aAC/BC,eAAgBN,EAAiBM,iBAGnCW,KAAKR,OAAS,IAAIS,EAAeH,GACjCE,KAAKhB,SAAWc,EAASd,SACzBgB,KAAKP,sBAAuB,EAG9BS,OACEC,EACAC,EACAC,GAEAL,KAAKhB,SAAmB,SAAEE,MAAQmB,EAAWC,QAEzCN,KAAKP,qBACPU,EAASI,gBAAgB,OAEzBJ,EAASI,gBAAgBH,GACrBJ,KAAKQ,OAAOL,EAASK,SAE3BR,KAAKR,OAAOU,OAAOC,UAMVM,UAAuBlB,EAElCmB,GACAP,GACAQ,GAEAjB,aAAYS,SAAEA,EAAQO,QAAEA,EAAU,CAAC,EAAG,KACpCf,QACAK,MAAKU,EAAWA,EAChBV,MAAKG,EAAYA,EACjBH,MAAKW,EAAoB,IAAIC,EAAeT,EAAU,IAAIU,EAAkB,EAAG,IAC/Eb,KAAKc,WAAWJ,GAGlBK,aACE,OAAOC,MAAMC,KAAKjB,MAAKU,GAGzBI,WAAWJ,GACT,MAAMQ,EAAMlB,MAAKG,EAAUgB,qBAAqB,IAAIC,GAEpD,IAAK,MAAOC,EAAGC,KAAMZ,EAAQa,UAAW,CACtC,MAAMpC,GAAU,IAAIiC,GAAUI,UAAU,GAAKF,GAAGG,OAAOP,GACjDQ,EAAO1B,MAAKW,EAAkBgB,OAAON,GACvCK,GACFA,EAAK1C,SAASG,QAAQD,MAAQC,EAC9BuC,EAAKjC,sBAAuB,GAE5BO,MAAKW,EAAkBiB,QAAQ,IAAItC,EAAuBH,IAI9Da,MAAKW,EAAkBgB,OAAOE,OAASnB,EAAQmB,OAC/C7B,MAAKW,EAAkBmB,QACvB9B,MAAKU,EAAWM,MAAMC,KAAKP,GAG7BR,OACEC,EACAC,EACAC,GAE6B,IAAzBL,MAAKU,EAASmB,SAElB7B,MAAKW,EAAkBN,WAAaA,EACpCL,MAAKW,EAAkBP,YAAcA,EACpCJ,MAAKW,EAAkBgB,OAAO3B,MAAKW,EAAkBgB,OAAOE,OAAS,GAA8BpC,qBAAuBO,KAAK+B,eAChI/B,MAAKW,EAAkBT,UAGzB8B,QAAQC,EAAWC,GACjBlC,MAAKW,EAAkBqB,QAAQC,EAAGC,GAClClC,KAAKc,WAAWd,MAAKU"}