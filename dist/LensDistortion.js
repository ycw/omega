import{Vector2 as e,ShaderMaterial as t,UniformsUtils as n}from"three";import{Pass as r,FullScreenQuad as i}from"three/examples/jsm/postprocessing/Pass.js";function a(e,t,n,r){if("a"===n&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?r:"a"===n?r.call(e):r?r.value:t.get(e)}function o(e,t,n,r,i){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!i)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?i.call(e,n):i?i.value=n:t.set(e,n),n}const u={uniforms:{tDiffuse:{value:null},uK0:{value:null},uCc:{value:null},uFc:{value:null},uAlpha_c:{value:0}},vertexShader:"\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }",fragmentShader:"\n    uniform sampler2D tDiffuse;\n    uniform vec2 uK0;\n    uniform vec2 uCc; \n    uniform vec2 uFc; \n    uniform float uAlpha_c;\n    varying vec2 vUv;\n    void main() {\n      vec2 Xn = 2. * ( vUv.st - .5 ); // -1..1\n      vec3 Xd = vec3(( 1. + uK0 * dot( Xn, Xn ) ) * Xn, 1.); // distorted \n      mat3 KK = mat3(\n        vec3(uFc.x, 0., 0.),\n        vec3(uAlpha_c * uFc.x, uFc.y, 0.),\n        vec3(uCc.x, uCc.y, 1.)\n      );\n      vec2 Xp = ( KK * Xd ).xy * .5 + .5; // projected; into 0..1 \n      if ( Xp.x >= 0. && Xp.x <= 1. && Xp.y >= 0. && Xp.y <= 1. ) {\n        gl_FragColor = texture2D( tDiffuse, Xp );\n      }\n    }\n  "};var s,c;class l extends r{constructor({distortion:r=new e(0,0),principalPoint:l=new e(0,0),focalLength:f=new e(1,1),skew:v=0}={}){super(),s.set(this,void 0),c.set(this,void 0),o(this,s,new i(new t({uniforms:n.clone(u.uniforms),vertexShader:u.vertexShader,fragmentShader:u.fragmentShader})),"f");const h=a(this,s,"f").material;h.uniforms.uK0.value=r,h.uniforms.uCc.value=l,h.uniforms.uFc.value=f,h.uniforms.uAlpha_c.value=v,o(this,c,h.uniforms,"f")}render(e,t,n){a(this,c,"f").tDiffuse.value=n.texture,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),this.clear&&e.clear()),a(this,s,"f").render(e)}get distortion(){return a(this,c,"f").uK0.value}set distortion(e){a(this,c,"f").uK0.value=e}get principalPoint(){return a(this,c,"f").uCc.value}set principalPoint(e){a(this,c,"f").uCc.value=e}get focalLength(){return a(this,c,"f").uFc.value}set focalLength(e){a(this,c,"f").uFc.value=e}get skew(){return a(this,c,"f").uAlpha_c.value}set skew(e){a(this,c,"f").uAlpha_c.value=e}}s=new WeakMap,c=new WeakMap;export{l as LensDistortionPass,u as LensDistortionShader};
//# sourceMappingURL=LensDistortion.js.map
